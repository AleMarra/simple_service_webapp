
package wtp;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LoginAPIHelperPortType", targetNamespace = "http://wtp")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LoginAPIHelperPortType {


    /**
     * 
     * @param authToken
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:logout")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "logout", targetNamespace = "http://wtp", className = "wtp.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://wtp", className = "wtp.LogoutResponse")
    public String logout(
        @WebParam(name = "authToken", targetNamespace = "http://wtp")
        String authToken);

    /**
     * 
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:activateUser")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "activateUser", targetNamespace = "http://wtp", className = "wtp.ActivateUser")
    @ResponseWrapper(localName = "activateUserResponse", targetNamespace = "http://wtp", className = "wtp.ActivateUserResponse")
    public String activateUser(
        @WebParam(name = "username", targetNamespace = "http://wtp")
        String username);

    /**
     * 
     * @param newPassword
     * @param userId
     * @param authToken
     * @param oldPassword
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:changePassword")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "changePassword", targetNamespace = "http://wtp", className = "wtp.ChangePassword")
    @ResponseWrapper(localName = "changePasswordResponse", targetNamespace = "http://wtp", className = "wtp.ChangePasswordResponse")
    public String changePassword(
        @WebParam(name = "authToken", targetNamespace = "http://wtp")
        String authToken,
        @WebParam(name = "oldPassword", targetNamespace = "http://wtp")
        String oldPassword,
        @WebParam(name = "newPassword", targetNamespace = "http://wtp")
        String newPassword,
        @WebParam(name = "userId", targetNamespace = "http://wtp")
        String userId);

    /**
     * 
     * @param userId
     * @param authToken
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:enableAccount")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "enableAccount", targetNamespace = "http://wtp", className = "wtp.EnableAccount")
    @ResponseWrapper(localName = "enableAccountResponse", targetNamespace = "http://wtp", className = "wtp.EnableAccountResponse")
    public String enableAccount(
        @WebParam(name = "authToken", targetNamespace = "http://wtp")
        String authToken,
        @WebParam(name = "userId", targetNamespace = "http://wtp")
        String userId);

    /**
     * 
     * @param authToken
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:isTokenValid")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "isTokenValid", targetNamespace = "http://wtp", className = "wtp.IsTokenValid")
    @ResponseWrapper(localName = "isTokenValidResponse", targetNamespace = "http://wtp", className = "wtp.IsTokenValidResponse")
    public String isTokenValid(
        @WebParam(name = "authToken", targetNamespace = "http://wtp")
        String authToken);

    /**
     * 
     * @param userId
     * @param authToken
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:disableAccount")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "disableAccount", targetNamespace = "http://wtp", className = "wtp.DisableAccount")
    @ResponseWrapper(localName = "disableAccountResponse", targetNamespace = "http://wtp", className = "wtp.DisableAccountResponse")
    public String disableAccount(
        @WebParam(name = "authToken", targetNamespace = "http://wtp")
        String authToken,
        @WebParam(name = "userId", targetNamespace = "http://wtp")
        String userId);

    /**
     * 
     * @param username
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:login")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "login", targetNamespace = "http://wtp", className = "wtp.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://wtp", className = "wtp.LoginResponse")
    public String login(
        @WebParam(name = "username", targetNamespace = "http://wtp")
        String username,
        @WebParam(name = "password", targetNamespace = "http://wtp")
        String password);

    /**
     * 
     * @param userId
     * @param authToken
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:resetPassword")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "resetPassword", targetNamespace = "http://wtp", className = "wtp.ResetPassword")
    @ResponseWrapper(localName = "resetPasswordResponse", targetNamespace = "http://wtp", className = "wtp.ResetPasswordResponse")
    public String resetPassword(
        @WebParam(name = "authToken", targetNamespace = "http://wtp")
        String authToken,
        @WebParam(name = "userId", targetNamespace = "http://wtp")
        String userId);

    /**
     * 
     * @param args7
     * @param args5
     * @param args6
     * @param args3
     * @param args4
     * @param args1
     * @param args2
     * @param args0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:registerUser")
    @WebResult(targetNamespace = "http://wtp")
    @RequestWrapper(localName = "registerUser", targetNamespace = "http://wtp", className = "wtp.RegisterUser")
    @ResponseWrapper(localName = "registerUserResponse", targetNamespace = "http://wtp", className = "wtp.RegisterUserResponse")
    public String registerUser(
        @WebParam(name = "args0", targetNamespace = "http://wtp")
        String args0,
        @WebParam(name = "args1", targetNamespace = "http://wtp")
        String args1,
        @WebParam(name = "args2", targetNamespace = "http://wtp")
        String args2,
        @WebParam(name = "args3", targetNamespace = "http://wtp")
        String args3,
        @WebParam(name = "args4", targetNamespace = "http://wtp")
        String args4,
        @WebParam(name = "args5", targetNamespace = "http://wtp")
        String args5,
        @WebParam(name = "args6", targetNamespace = "http://wtp")
        String args6,
        @WebParam(name = "args7", targetNamespace = "http://wtp")
        Integer args7);

}
